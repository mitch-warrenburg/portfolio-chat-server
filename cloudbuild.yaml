steps:
  - name: gcr.io/cloud-builders/docker
    id: Build Image
    entrypoint: 'bash'
    args: [ '-c', 'docker build -t $_IMAGE:$COMMIT_SHA -t $_IMAGE:latest --build-arg REDIS_HOST="$$REDIS_HOST" --build-arg AUTH_SERVER_URL="$$AUTH_SERVER_URL" --build-arg AUTH_SERVER_URL="$$AUTH_SERVER_USER" --build-arg AUTH_SERVER_URL="$$AUTH_SERVER_PASSWORD"  .' ]
    secretEnv: [ 'REDIS_HOST', 'AUTH_SERVER_URL', 'AUTH_SERVER_USER', 'AUTH_SERVER_PASSWORD' ]
  - name: gcr.io/cloud-builders/docker
    id: Push Image
    args: [ push, '$_IMAGE:$COMMIT_SHA' ]
  - name: gcr.io/cloud-builders/gke-deploy
    id: Prepare GKE deployment
    args:
      - prepare
      - '--filename=$_K8S_PATH'
      - '--image=$_IMAGE:$COMMIT_SHA'
      - '--app=$_APP'
      - '--version=$COMMIT_SHA'
      - '--namespace=$_NAMESPACE'
      - '--annotation=$_K8S_ANNOTATIONS,gcb-build-id=$BUILD_ID'
      - '--create-application-cr'
      - '--output=output'
  - name: gcr.io/cloud-builders/gke-deploy
    id: Apply GKE deployment
    args:
      - apply
      - '--filename=output/expanded'
      - '--cluster=$_CLUSTER'
      - '--location=$_REGION'
      - '--namespace=$_NAMESPACE'
images:
  - '$_IMAGE:$COMMIT_SHA'
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _IMAGE: gcr.io/warrenburg-portfolio/portfolio-chat-server
  _K8S_PATH: kubernetes/
  _APP: portfolio-chat-server
  _REGION: us-central1
  _NAMESPACE: portfolio
  _CLUSTER: portfolio
  _OUTPUT_BUCKET_PATH: warrenburg-portfolio_cloudbuild/deploy
availableSecrets:
  secretManager:
    - versionName: projects/warrenburg-portfolio/secrets/REDIS_HOST/versions/latest
      env: REDIS_HOST
    - versionName: projects/warrenburg-portfolio/secrets/AUTH_SERVER_URL/versions/latest
      env: AUTH_SERVER_URL
    - versionName: projects/warrenburg-portfolio/secrets/AUTH_SERVER_USER/versions/latest
      env: AUTH_SERVER_USER
    - versionName: projects/warrenburg-portfolio/secrets/AUTH_SERVER_PASSWORD/versions/latest
      env: AUTH_SERVER_PASSWORD
